# Даны значения величины заработной платы заемщиков банка (zp)
# и значения их поведенческого кредитного скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy
# Полученные значения должны быть равны.
# Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков,
# а затем с использованием функций из библиотек numpy и pandas.

import numpy as np
import pandas as pd
# import matplotlib.pyplot as plt

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])
# plt.scatter(zp, ks)
# plt.show()


# ковариация
cov = np.mean(zp * ks) - np.mean(zp) * np.mean(ks)
print(f'ковариация величин с помощью элементарных действий {cov} ')
"""
ковариация величин с помощью элементарных действий 9157.839999999997 
"""

cov = np.cov(zp, ks, ddof=0)
print(f'ковариация величин с помощью функции cov {cov} ')
"""
ковариация величин с помощью функции cov [[ 3494.64  9157.84]
 [ 9157.84 30468.89]] 
"""


# коэффициент корреляции Пирсона
r = cov / (np.std(zp) * np.std(ks))
print(f'коэффициент корреляции Пирсона c помощью ковариации и среднеквадратичных отклонений  {r}')
"""
коэффициент корреляции Пирсона c помощью ковариации и среднеквадратичных отклонений  [[0.33866702 0.88749009]
 [0.88749009 2.95275283]]
"""

r = np.corrcoef(zp, ks)
print(f'коэффициент корреляции Пирсона с использованием функции из библиотеки numpy {r}')
"""
коэффициент корреляции [[1.         0.88749009]
 [0.88749009 1.        ]] 
"""

zp = pd.Series(zp)
ks = pd.Series(ks)
rzp = zp.corr(ks)
rks = zp.corr(ks)
print(f'коэффициент корреляции Пирсона с использованием функции из библиотеки pandas {rzp, rks}')
"""
коэффициент корреляции Пирсона с использованием функции из библиотеки pandas (0.8874900920739162, 0.8874900920739162)
"""